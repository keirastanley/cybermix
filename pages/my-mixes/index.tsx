import { useEffect, useState } from "react"
import Link from "next/link"
import { getAllPlaylists, deletePlaylistById, updatePlaylist } from "@/functions/requests"
import { deleteSpotifyPlaylist, getSpotifyPlaylist } from "@/functions/spotify"
import { playlistArrType, playlistDataType } from "@/data/types"
import {v4 as uuidv4} from "uuid"
import styles from "@/styles/playlists.module.css"
import { spotifyUserType } from "@/data/types"
import Loader from "@/components/loader"
import {BsTrash} from "react-icons/bs"
import {CiEdit} from "react-icons/ci"

type propsObj = {
    user: spotifyUserType
}

export default function MyMixes({user} : propsObj) {
    const [playlists, setPlaylists] = useState<playlistArrType>([])

    async function getPlaylists() {
        const playlistArray = await getAllPlaylists();
        let userPlaylists = []
        for (let i = 0; i < playlistArray.length; i++) {
            if (playlistArray[i].access.includes(user.id)) {
                const spotifyPlaylist = await getSpotifyPlaylist(playlistArray[i].spotify_id)
                let playlistObj;
                if (spotifyPlaylist.images.length > 0) {
                    const response = await updatePlaylist(playlistArray[i], {image: spotifyPlaylist.images[0].url})
                    playlistObj = response;
                }
                else {
                    playlistObj = playlistArray[i]
                }
                userPlaylists.push(playlistObj)
            }
        }
        setPlaylists(userPlaylists)
    }

    useEffect(() => {
        getPlaylists()
    }, [])

    async function deletePlaylist(playlist : playlistDataType) {
        if (window.confirm(`Are you sure you want to delete ${playlist.name}?`)) {
            await deleteSpotifyPlaylist(playlist.spotify_id)
            await deletePlaylistById(playlist._id)
            getPlaylists()
        }
        // console.log(deletePlaylist(id))
    }

    return user ? <>
        {/* <h1>My mixes</h1> */}
        <div className={styles.playlists_container}>
          {playlists.length > 0 ? playlists.map(el => 
            <div className={styles.playlist} key={uuidv4()}>
                <div className={styles.playlist_name_button}>
                  <h4>{el.name}</h4>
                  <div className={styles.buttons}>
                    <Link href={`/my-mixes/${el._id}`}><button><CiEdit/></button></Link>
                    <button onClick={() => deletePlaylist(el)}><BsTrash/></button>
                  </div> 
                </div>
                <img src={el.image}  title="This image is automatically generated by Spotify or by Cyber-Mix if no image is found."></img>
                <p>Made by {el.created_by}</p>
                <p>{el.date.split(" ").slice(0, 4).join(" ")}</p>
            </div>) : <Loader/>}
        </div>
    </> : null
}